openapi: 3.0.1
info:
  title: address-service
  version: '1.0'
  description: This application provides repository access to Address, City, State, and Zip Code entities.
servers:
  - url: http://localhost:8983
paths:
  /addresses/{id}:
    get:
      tags:
        - address-controller
      summary: Get Address By ID
      description: get-address
      operationId: getAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    put:
      tags:
        - address-controller
      summary: Update Address By ID
      description: update-address
      operationId: updateAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    delete:
      tags:
        - address-controller
      summary: Delete Address By ID
      description: delete-address
      operationId: deleteAddress
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /addresses/:
    get:
      tags:
        - address-controller
      summary: Get All Addresses
      description: get-addresses
      operationId: getAddresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
    post:
      tags:
        - address-controller
      summary: Create New Address
      description: create-address
      operationId: createAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
  /addresses/{state}/zip-codes:
    get:
      tags:
        - address-controller
      summary: Get Zip Codes For State
      description: get-zip-codes-for-state
      operationId: getZipCodesWithPostalCode
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZipCode'
  /addresses/states:
    get:
      tags:
        - address-controller
      summary: Get All States
      description: get-states
      operationId: getStates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/State'
  /addresses/calculate-distance:
    get:
      tags:
        - address-controller
      summary: Calculate Distance Between 2 Addresses
      description: calculate-distance
      operationId: calculateDistance
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Distance'
components:
  schemas:
    AddressRequest:
      required:
        - city
        - line1
        - state
        - zipCode
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          $ref: '#/components/schemas/ZipCode'
    ZipCode:
      required:
        - postalCode
      type: object
      properties:
        postalCode:
          type: string
        plusFour:
          type: string
    Address:
      required:
        - city
        - id
        - line1
        - state
        - zipCode
      type: object
      properties:
        id:
          type: integer
          format: int64
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          $ref: '#/components/schemas/ZipCode'
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    State:
      required:
        - abbreviation
        - name
      type: object
      properties:
        abbreviation:
          type: string
        name:
          type: string
    Distance:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/GeoLocation'
        end:
          $ref: '#/components/schemas/GeoLocation'
        miles:
          type: number
          format: double
